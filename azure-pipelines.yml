# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  batch: true
  branches:
    include:
      - refs/tags/*

variables:
- group: 'Tingle GPG Key' # contains SigningKeyId, SigningName, and SigningPassword
- name: gpgFileName
  value: 'tingle.gpg'
- name: wrapperScript
  value: 'gradlew' # 'gradlew.bat' is for a Windows environment, use 'gradlew' for UNIX e.g. Ubuntu/MacOS


stages: 
#################################################################################
#       Build with Gradle
#################################################################################
- stage: Build
    
  jobs:
    - job: Build

      pool:
        vmImage: 'ubuntu-latest'
        demands:
          - java
          - JDK

      steps:
        - task: gitversion/setup@0
          inputs:
            versionSpec: '5.x'

        - task: gitversion/execute@0
          inputs:
            useConfigFile: true
            configFilePath: '$(Build.SourcesDirectory)/GitVersion.yml'
        
        - task: DownloadSecureFile@1
          name: 'GPG'
          displayName: 'Download GPG'
          inputs:
              secureFile: '$(gpgFileName)'

        # TODO: add tasks for build and test before assembling

        - task: Gradle@2
          displayName: 'gradlew assembleRelease'
          inputs:
            gradleWrapperFile: '$(wrapperScript)'
            tasks: 'assembleRelease'
            testResultsFiles: '**/build/test-results/TEST-*.xml'

        - task: CopyFiles@2
          displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
          inputs:
            sourceFolder: '$(build.sourcesdirectory)'
            contents: '**/*.aar'
            targetFolder: '$(build.artifactstagingdirectory)'

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact: drop'
          inputs:
            pathtoPublish: '$(build.artifactstagingdirectory)'

#################################################################################
#       Publish to maven
#################################################################################
- stage: Publish
  dependsOn: Build
  # only publish to maven from a tag
  condition: |
      and
      (
        succeeded(),
        startsWith(variables['Build.SourceBranch'], 'refs/tags/')
      )

  jobs:  
    - job: Publish    

      pool:
        vmImage: 'ubuntu-latest'
        
      steps:
      - task: DownloadSecureFile@1
        name: 'GPG'
        displayName: 'Download GPG'
        inputs:
            secureFile: '$(gpgFileName)'

      - task: Gradle@1
        displayName: 'gradlew publishReleasePublicationToSonatypeRepository --stacktrace'
        inputs:
            gradleWrapperFile: '$(wrapperScript)'
            tasks: 'publishReleasePublicationToSonatypeRepository --stacktrace'
            publishJUnitResults: false
